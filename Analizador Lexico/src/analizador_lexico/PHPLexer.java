/* The following code was generated by JFlex 1.6.1 */


package analizador_lexico;
/*you shoukd import your enum file with all the symbols */ 
import static analizador_lexico.Token.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>C:/Users/Diego PÃ©rez Moir/Desktop/U/Quinto Cinclo/Lenguajes Formales y Automatas/Analizador Lexico/src/analizador_lexico/PHP.flex</tt>
 */
class PHPLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\25\1\14\1\16\1\16\1\15\22\0\1\26\1\73\1\27"+
    "\1\24\1\53\1\75\1\76\1\31\1\103\1\104\1\21\1\72\1\102"+
    "\1\11\1\12\1\20\1\2\1\10\6\6\2\3\1\67\1\101\1\74"+
    "\1\70\1\71\1\57\1\110\1\35\1\7\1\33\1\40\1\13\1\5"+
    "\1\65\1\51\1\42\1\55\1\62\1\34\1\50\1\45\1\47\1\52"+
    "\1\66\1\43\1\37\1\46\1\44\1\64\1\63\1\4\1\60\1\55"+
    "\1\54\1\30\1\56\1\100\1\32\1\0\1\35\1\7\1\33\1\40"+
    "\1\13\1\5\1\65\1\51\1\42\1\55\1\62\1\34\1\50\1\45"+
    "\1\47\1\52\1\66\1\43\1\37\1\46\1\44\1\64\1\63\1\4"+
    "\1\60\1\55\1\105\1\77\1\106\1\107\6\1\1\17\32\1\1\23"+
    "\137\1\60\0\2\41\115\0\1\36\u1500\0\1\22\u097f\0\13\22\35\0"+
    "\1\16\1\16\5\0\1\22\57\0\1\22\312\0\1\61\u0ed5\0\1\22"+
    "\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\ud00f\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\3\2\1\4\1\5\1\2"+
    "\2\6\1\2\1\7\1\10\1\11\1\6\1\12\1\13"+
    "\1\1\4\2\1\1\2\2\1\1\7\2\1\1\1\14"+
    "\1\15\1\16\3\2\1\17\1\20\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\4\0\1\41\1\0"+
    "\1\2\1\0\4\2\2\3\1\42\1\0\1\43\1\0"+
    "\1\44\6\2\1\11\1\0\1\45\1\46\1\47\2\0"+
    "\1\50\1\0\1\50\13\2\1\0\2\2\2\51\2\2"+
    "\2\0\3\2\1\0\1\2\1\52\1\53\3\0\1\53"+
    "\4\2\1\0\6\2\1\54\2\2\1\55\1\1\2\55"+
    "\1\56\4\2\1\57\1\60\1\61\1\62\1\63\1\64"+
    "\1\65\1\66\1\0\1\67\1\70\1\71\1\72\1\73"+
    "\1\74\1\75\1\76\2\3\1\41\1\0\1\77\1\0"+
    "\2\2\1\100\1\2\1\3\4\0\3\2\1\0\4\2"+
    "\1\11\2\0\1\101\2\0\4\2\1\0\1\2\1\0"+
    "\7\2\1\0\3\2\1\0\1\2\1\0\2\2\1\102"+
    "\2\0\4\2\2\103\5\0\7\2\2\104\1\0\1\2"+
    "\1\105\2\2\1\106\1\2\1\0\3\2\1\55\1\0"+
    "\1\2\1\55\2\2\1\107\1\110\1\111\1\0\1\112"+
    "\1\0\4\2\1\0\2\113\1\2\1\114\2\115\1\2"+
    "\1\0\2\2\1\0\3\2\1\116\1\11\3\0\1\50"+
    "\1\0\1\50\1\0\4\2\1\0\4\2\1\0\3\2"+
    "\2\117\1\2\1\0\2\2\2\120\1\0\2\2\2\0"+
    "\4\2\5\0\7\2\1\0\2\2\1\0\2\2\2\0"+
    "\4\2\1\55\1\0\2\2\1\121\1\0\2\122\2\2"+
    "\2\123\1\2\2\0\2\2\1\0\2\2\2\124\1\2"+
    "\1\125\3\11\1\0\2\2\1\0\1\2\1\0\2\2"+
    "\1\0\2\2\2\126\1\127\1\2\1\130\2\131\1\0"+
    "\1\2\1\0\1\2\1\132\2\0\4\2\1\133\5\0"+
    "\1\133\6\2\1\0\1\2\2\134\1\0\1\2\2\135"+
    "\1\136\1\137\1\0\1\137\2\2\1\0\1\2\1\55"+
    "\2\140\1\2\1\141\1\0\3\2\2\142\1\143\1\0"+
    "\2\2\1\0\1\2\1\11\2\2\1\144\1\0\3\2"+
    "\1\0\1\2\1\0\1\2\1\145\1\146\1\145\1\146"+
    "\2\2\5\0\5\2\1\147\1\0\1\2\1\0\1\2"+
    "\1\0\2\2\2\150\1\55\1\151\1\0\1\2\1\152"+
    "\2\153\1\2\1\0\2\2\1\0\1\2\1\0\2\2"+
    "\1\0\2\2\1\0\1\2\1\0\1\2\1\154\1\155"+
    "\1\156\4\0\1\156\4\2\2\157\1\0\1\2\2\160"+
    "\1\2\1\55\2\161\1\2\1\0\2\2\2\162\1\0"+
    "\2\2\1\0\1\2\1\163\2\164\2\165\5\0\5\2"+
    "\1\0\1\2\1\0\2\2\1\0\1\55\1\2\2\166"+
    "\2\2\1\0\1\167\1\0\1\170\1\0\1\2\1\167"+
    "\1\2\1\170\1\2\1\0\1\2\2\171\1\172\1\0"+
    "\1\55\1\173\1\174\1\2\1\0\1\175\1\176\1\2"+
    "\1\175\1\176\1\0\1\2\1\0\1\55\1\2\1\0"+
    "\1\2\1\0\1\2\2\0\1\2\2\177\2\200\2\0"+
    "\1\2\2\0\1\2\1\0\2\201\1\202";

  private static int [] zzUnpackAction() {
    int [] result = new int[622];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\111\0\222\0\333\0\u0124\0\u016d\0\u01b6\0\u01ff"+
    "\0\u0248\0\u0291\0\u02da\0\u0323\0\u036c\0\u03b5\0\u03fe\0\u0447"+
    "\0\u0490\0\111\0\u04d9\0\111\0\u04d9\0\u0522\0\u056b\0\u05b4"+
    "\0\u05fd\0\u0646\0\u068f\0\u06d8\0\u0721\0\u076a\0\u07b3\0\u07fc"+
    "\0\u0845\0\u088e\0\u08d7\0\u0920\0\u0969\0\111\0\111\0\u09b2"+
    "\0\u09fb\0\u0a44\0\u0a8d\0\u0ad6\0\u0b1f\0\u0b68\0\u0bb1\0\u0bfa"+
    "\0\u0c43\0\u0c8c\0\u0cd5\0\u0d1e\0\u0d67\0\111\0\111\0\111"+
    "\0\111\0\111\0\111\0\111\0\111\0\111\0\u0db0\0\u0df9"+
    "\0\u0e42\0\u0e8b\0\u0ed4\0\u0f1d\0\u0f66\0\u0faf\0\u0ff8\0\u1041"+
    "\0\u108a\0\u10d3\0\u111c\0\u1165\0\u11ae\0\111\0\u1165\0\111"+
    "\0\u11f7\0\u1240\0\u1289\0\u12d2\0\u131b\0\u1364\0\u13ad\0\u13f6"+
    "\0\111\0\u143f\0\111\0\u04d9\0\u1488\0\111\0\u14d1\0\u04d9"+
    "\0\u151a\0\u1563\0\u15ac\0\u15f5\0\u163e\0\u1687\0\u16d0\0\u1719"+
    "\0\u1762\0\u17ab\0\u17f4\0\u183d\0\u1886\0\u18cf\0\111\0\222"+
    "\0\u1918\0\u1961\0\u19aa\0\u19f3\0\u1a3c\0\u1a85\0\u1ace\0\u1b17"+
    "\0\u1b60\0\222\0\111\0\u1ba9\0\u1bf2\0\u1c3b\0\222\0\u1c84"+
    "\0\u1ccd\0\u1d16\0\u1d5f\0\u1da8\0\u1df1\0\u1e3a\0\u1e83\0\u1ecc"+
    "\0\u1f15\0\u1f5e\0\222\0\u1fa7\0\u1ff0\0\u2039\0\u2082\0\u20cb"+
    "\0\u2114\0\111\0\u215d\0\u21a6\0\u21ef\0\u2238\0\111\0\u2281"+
    "\0\111\0\111\0\u22ca\0\111\0\u1165\0\u2313\0\u235c\0\111"+
    "\0\u23a5\0\111\0\111\0\111\0\111\0\111\0\111\0\u0df9"+
    "\0\u0e42\0\u23ee\0\u23ee\0\222\0\u2437\0\u2480\0\u24c9\0\u2512"+
    "\0\u255b\0\u25a4\0\u25ed\0\u0e8b\0\u2636\0\u267f\0\u26c8\0\u2711"+
    "\0\u275a\0\u27a3\0\u27ec\0\u2835\0\u287e\0\u28c7\0\u2910\0\u2959"+
    "\0\u29a2\0\111\0\u29eb\0\u2a34\0\u2a7d\0\u2ac6\0\u2b0f\0\u2b58"+
    "\0\u2ba1\0\u2bea\0\u2c33\0\u2c7c\0\u2cc5\0\u2d0e\0\u2d57\0\u2da0"+
    "\0\u2de9\0\u2e32\0\u2e7b\0\u2ec4\0\u2f0d\0\u2f56\0\u2f9f\0\u2fe8"+
    "\0\u3031\0\u307a\0\u30c3\0\222\0\u310c\0\u3155\0\u319e\0\u31e7"+
    "\0\u3230\0\u3279\0\111\0\222\0\u32c2\0\u330b\0\u3354\0\u339d"+
    "\0\u33e6\0\u342f\0\u3478\0\u34c1\0\u350a\0\u3553\0\u359c\0\u35e5"+
    "\0\111\0\222\0\u362e\0\u3677\0\222\0\u36c0\0\u3709\0\222"+
    "\0\u3752\0\u379b\0\u37e4\0\u382d\0\u3876\0\u38bf\0\u3908\0\u3951"+
    "\0\222\0\u399a\0\u39e3\0\111\0\111\0\111\0\u3a2c\0\111"+
    "\0\u3a75\0\u3abe\0\u3b07\0\u3b50\0\u3b99\0\u3be2\0\111\0\222"+
    "\0\u3c2b\0\222\0\u3c74\0\u3cbd\0\u3d06\0\u3d4f\0\u3d98\0\u3de1"+
    "\0\u3e2a\0\u3e73\0\u3ebc\0\u3f05\0\222\0\u3f4e\0\u3f97\0\u3fe0"+
    "\0\u4029\0\u2959\0\u4072\0\u4029\0\u40bb\0\u4104\0\u414d\0\u4196"+
    "\0\u41df\0\u4228\0\u4271\0\u42ba\0\u4303\0\u434c\0\u4395\0\u43de"+
    "\0\u4427\0\u4470\0\111\0\222\0\u44b9\0\u4502\0\u454b\0\u4594"+
    "\0\111\0\222\0\u45dd\0\u4626\0\u466f\0\u46b8\0\u4701\0\u474a"+
    "\0\u4793\0\u47dc\0\u4825\0\u486e\0\u48b7\0\u4900\0\u4949\0\u4992"+
    "\0\u49db\0\u4a24\0\u4a6d\0\u4ab6\0\u4aff\0\u4b48\0\u4b91\0\u4bda"+
    "\0\u4c23\0\u4c6c\0\u4cb5\0\u4cfe\0\u4d47\0\u4d90\0\u4dd9\0\u4e22"+
    "\0\u4e6b\0\u4eb4\0\u4efd\0\u4f46\0\u4f8f\0\u4fd8\0\u5021\0\222"+
    "\0\u506a\0\111\0\222\0\u50b3\0\u50fc\0\111\0\222\0\u5145"+
    "\0\u518e\0\u51d7\0\u5220\0\u5269\0\u52b2\0\u52fb\0\u5344\0\111"+
    "\0\222\0\u538d\0\222\0\u53d6\0\u0323\0\111\0\u541f\0\u5468"+
    "\0\u54b1\0\u54fa\0\u5543\0\u558c\0\u55d5\0\u561e\0\u5667\0\u56b0"+
    "\0\u56f9\0\111\0\222\0\222\0\u5742\0\222\0\111\0\222"+
    "\0\u578b\0\u57d4\0\u581d\0\u5866\0\222\0\u58af\0\u58f8\0\u5941"+
    "\0\u598a\0\u59d3\0\u5a1c\0\111\0\u5a65\0\u5aae\0\u5af7\0\u5b40"+
    "\0\u5b89\0\222\0\u5bd2\0\u5c1b\0\u5c64\0\u5cad\0\u5cf6\0\u5d3f"+
    "\0\u5d88\0\u5dd1\0\111\0\222\0\u5e1a\0\u5e63\0\111\0\222"+
    "\0\222\0\111\0\u5eac\0\222\0\u5ef5\0\u5f3e\0\u5f87\0\u5fd0"+
    "\0\u6019\0\111\0\222\0\u6062\0\111\0\u60ab\0\u60f4\0\u613d"+
    "\0\u6186\0\111\0\222\0\u61cf\0\u6218\0\u6261\0\u62aa\0\u62f3"+
    "\0\u633c\0\u04d9\0\u6385\0\u63ce\0\111\0\u6417\0\u6460\0\u64a9"+
    "\0\u64f2\0\u653b\0\u6584\0\u65cd\0\u6616\0\111\0\111\0\222"+
    "\0\222\0\u665f\0\u66a8\0\u66f1\0\u673a\0\u6783\0\u67cc\0\u6815"+
    "\0\u685e\0\u68a7\0\u68f0\0\u6939\0\u6982\0\222\0\u69cb\0\u6a14"+
    "\0\u6a5d\0\u6aa6\0\u6aef\0\u6b38\0\u6b81\0\111\0\222\0\u6bca"+
    "\0\222\0\u6c13\0\u6c5c\0\222\0\111\0\222\0\u6ca5\0\u6cee"+
    "\0\u6d37\0\u6d80\0\u6dc9\0\u6e12\0\u6e5b\0\u6ea4\0\u6eed\0\u6f36"+
    "\0\u6f7f\0\u6fc8\0\u7011\0\u705a\0\u70a3\0\u70ec\0\222\0\222"+
    "\0\u7135\0\u717e\0\u71c7\0\u7210\0\u7259\0\u72a2\0\u72eb\0\u7334"+
    "\0\u737d\0\u73c6\0\u740f\0\u7458\0\u74a1\0\u74ea\0\111\0\222"+
    "\0\u7533\0\u757c\0\111\0\222\0\u75c5\0\u760e\0\u7657\0\u76a0"+
    "\0\111\0\222\0\u76e9\0\u7732\0\u777b\0\u77c4\0\u780d\0\222"+
    "\0\111\0\222\0\111\0\222\0\u7856\0\u789f\0\u78e8\0\u7931"+
    "\0\u797a\0\u79c3\0\u7a0c\0\u7a55\0\u7a9e\0\u7ae7\0\u7b30\0\u7b79"+
    "\0\u7bc2\0\u7c0b\0\u7c54\0\u7c9d\0\u7ce6\0\u7d2f\0\111\0\222"+
    "\0\u7d78\0\u7dc1\0\u7e0a\0\111\0\u7e53\0\111\0\u7e9c\0\u7ee5"+
    "\0\222\0\u7f2e\0\222\0\u7f77\0\u7fc0\0\u8009\0\111\0\222"+
    "\0\222\0\u8052\0\u809b\0\222\0\222\0\u80e4\0\u812d\0\111"+
    "\0\111\0\u8176\0\222\0\222\0\u81bf\0\u8208\0\u8251\0\u829a"+
    "\0\u82e3\0\u832c\0\u8375\0\u83be\0\u8407\0\u8450\0\u8499\0\u84e2"+
    "\0\111\0\222\0\111\0\222\0\u852b\0\u8574\0\u85bd\0\u8606"+
    "\0\u864f\0\u8698\0\u86e1\0\111\0\222\0\111";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[622];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\5\1\10"+
    "\1\5\1\11\1\12\1\13\1\14\1\15\1\0\1\16"+
    "\1\17\1\20\1\2\1\3\1\21\2\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\2\3"+
    "\1\44\1\45\1\46\1\3\1\47\1\50\1\3\1\2"+
    "\1\3\1\51\1\52\1\53\1\3\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66"+
    "\1\67\1\70\1\71\1\72\1\73\1\74\1\75\14\76"+
    "\4\0\1\77\71\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\24\76"+
    "\2\5\1\100\1\76\1\5\1\101\1\5\1\76\1\102"+
    "\1\103\4\0\1\77\72\76\2\5\2\76\1\5\1\76"+
    "\1\5\1\76\1\102\1\103\4\0\1\77\71\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\5\3\1\104\3\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\105\1\106\1\3\1\107\2\3\1\110"+
    "\3\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\1\3\1\111\7\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\24\76\1\112"+
    "\1\113\2\76\1\113\1\76\1\113\1\114\1\115\1\76"+
    "\4\0\1\77\47\76\1\116\1\76\1\117\20\76\2\102"+
    "\2\76\1\102\1\76\1\102\3\76\4\0\1\77\47\76"+
    "\1\120\21\76\3\3\1\121\4\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\1\3\1\122\1\123"+
    "\1\3\1\76\2\3\1\76\3\3\1\124\2\3\1\125"+
    "\2\3\2\76\1\3\2\76\1\3\1\76\2\3\1\126"+
    "\2\3\22\76\125\0\1\14\75\0\10\16\2\0\1\16"+
    "\3\0\1\16\3\0\1\16\6\0\4\16\1\0\2\16"+
    "\1\0\11\16\2\0\1\16\2\0\1\16\1\0\5\16"+
    "\22\0\14\76\4\0\1\127\1\130\46\76\1\131\34\76"+
    "\4\0\1\77\1\132\46\76\1\133\20\76\14\21\4\0"+
    "\1\127\70\21\14\134\4\0\1\135\6\134\1\136\1\137"+
    "\1\140\57\134\1\76\4\3\1\141\3\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\1\142\1\143"+
    "\1\144\1\3\1\76\1\3\1\145\1\76\3\3\1\146"+
    "\1\147\1\3\1\150\2\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\2\3\1\151\1\152\1\76"+
    "\2\3\1\76\5\3\1\153\3\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\154\1\155\10\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\6\3\1\156\1\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\157\1\160"+
    "\1\3\1\76\1\3\1\161\1\3\1\162\5\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\25\76\1\163\14\76\1\164\26\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\4\3\1\165\4\3\2\76\1\3\2\76"+
    "\1\3\1\76\1\3\1\166\3\3\23\76\10\3\2\76"+
    "\1\167\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\170\1\171\4\3\1\172\3\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\27\76\1\173\6\76"+
    "\4\0\1\77\15\76\2\174\5\76\1\175\2\76\1\176"+
    "\41\76\4\3\1\177\3\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\174\1\200\1\3"+
    "\1\76\3\3\1\201\2\3\1\202\2\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\203"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\204\1\205\1\3\1\76"+
    "\3\3\1\206\5\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\207\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\3\3\1\210\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\1\3\1\211\5\3"+
    "\1\212\1\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\1\3\1\213"+
    "\7\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\1\3\1\214\1\215"+
    "\6\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\1\216\2\217\2\216\1\217\1\216\1\217\2\76\1\216"+
    "\3\0\1\220\1\77\2\76\1\216\6\76\4\216\1\76"+
    "\2\216\1\76\1\216\1\221\7\216\2\76\1\216\2\76"+
    "\1\216\1\76\5\216\36\76\4\0\1\77\50\76\1\222"+
    "\20\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\7\3\1\223"+
    "\1\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\3\3\1\224\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\2\3"+
    "\1\225\1\3\1\76\2\3\1\76\5\3\1\226\3\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\36\76\4\0"+
    "\1\77\46\76\1\227\35\76\4\0\1\77\47\76\1\230"+
    "\1\231\33\76\4\0\1\77\47\76\1\232\1\233\21\76"+
    "\1\112\1\113\2\76\1\113\1\76\1\113\1\117\1\115"+
    "\1\76\4\0\1\77\47\76\1\234\1\76\1\235\32\76"+
    "\4\0\1\77\47\76\1\236\34\76\4\0\1\77\36\76"+
    "\1\237\10\76\1\240\3\76\1\241\30\76\4\0\1\77"+
    "\47\76\1\242\34\76\4\0\1\77\47\76\1\243\5\76"+
    "\1\244\26\76\4\0\1\77\47\76\1\245\6\76\1\246"+
    "\25\76\4\0\1\77\47\76\1\247\34\76\4\0\1\77"+
    "\1\130\71\76\2\250\1\76\4\250\2\76\1\250\4\0"+
    "\1\77\12\76\1\250\1\76\1\250\2\76\1\250\52\76"+
    "\1\251\5\76\1\251\3\76\4\0\1\77\72\76\2\102"+
    "\2\76\1\102\1\76\1\102\2\76\1\103\4\0\1\77"+
    "\72\76\2\252\2\76\1\252\1\76\1\252\1\253\2\76"+
    "\4\0\1\77\51\76\1\253\17\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\1\3\1\254\7\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\24\76\1\255"+
    "\44\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\3\3\1\256"+
    "\5\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\3\3\1\257\5\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\1\3\1\260\7\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\261\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\24\76\1\262\1\263\1\100\1\76\1\262"+
    "\1\101\1\262\1\76\1\264\1\103\4\0\1\77\72\76"+
    "\1\263\1\113\2\76\1\113\1\76\1\113\1\76\1\264"+
    "\1\103\4\0\1\77\72\76\2\117\2\76\1\117\1\76"+
    "\1\117\1\76\1\265\1\76\4\0\1\77\72\76\2\102"+
    "\2\76\1\102\1\76\1\102\3\76\4\0\1\77\71\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\266\1\267\3\3\1\270"+
    "\4\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\7\3\1\271\1\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\272\1\273\1\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\1\3\1\274\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\10\3\1\275\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\3\3\1\276\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\22\76\14\21"+
    "\4\0\1\127\1\277\67\21\14\300\4\301\1\77\70\300"+
    "\14\76\4\0\1\77\47\76\1\302\20\76\14\134\4\0"+
    "\1\135\1\303\5\134\1\136\1\137\1\140\73\134\4\0"+
    "\1\135\6\134\1\140\1\137\1\140\57\134\1\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\304\1\305\1\3\1\306\6\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\7\3\1\307\1\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\2\3"+
    "\1\310\1\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\311\1\312\10\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\313"+
    "\1\314\10\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\3\3\1\315\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\1\3\1\316\7\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\317\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\3\3\1\320\1\76\2\3"+
    "\1\76\5\3\1\321\3\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\2\3\1\322\1\3\1\323"+
    "\1\324\1\3\1\76\4\3\1\325\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\3\3\1\326\5\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\15\76\2\327"+
    "\52\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\327\1\330\1\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\331\1\332\1\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\1\3\1\333\7\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\1\3"+
    "\1\334\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\14\76\1\335\67\76\4\0"+
    "\1\77\20\76\2\336\47\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\3\3\1\337\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\336\1\340"+
    "\10\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\4\3\1\341\3\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\1\3\1\342\2\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\35\76\1\343\4\0\1\77\71\76\10\3\2\76\1\344"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\15\76\2\345\65\76\4\0"+
    "\1\77\12\76\1\346\2\76\2\347\6\76\1\350\56\76"+
    "\4\0\1\77\31\76\1\351\37\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\345"+
    "\1\352\1\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\1\3\1\353\2\3\1\347"+
    "\1\354\1\3\1\76\4\3\1\355\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\10\3\1\356\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\4\3\1\357\4\3\2\76\1\3\2\76\1\3\1\76"+
    "\4\3\1\360\35\76\1\361\4\0\1\77\71\76\10\3"+
    "\2\76\1\362\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\363\1\364"+
    "\1\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\1\3\1\365\3\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\6\3\1\366"+
    "\2\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\3\3\1\367\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\370\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\1\3\1\371\7\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\372\1\373\4\3\1\374\3\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\6\3\1\375\1\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\216\2\76\1\216\3\0"+
    "\1\220\1\77\2\76\1\216\6\76\4\216\1\76\2\216"+
    "\1\76\11\216\2\76\1\216\2\76\1\216\1\76\5\216"+
    "\24\76\2\217\2\76\1\217\1\76\1\217\3\76\4\0"+
    "\1\77\70\76\1\0\10\220\2\0\1\220\3\0\1\220"+
    "\3\0\1\220\6\0\4\220\1\0\2\220\1\0\11\220"+
    "\2\0\1\220\2\0\1\220\1\0\5\220\22\0\1\76"+
    "\10\216\2\76\1\376\3\0\1\220\1\77\2\76\1\216"+
    "\6\76\4\216\1\76\2\216\1\76\11\216\2\76\1\216"+
    "\2\76\1\216\1\76\5\216\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\377\1\u0100\10\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\1\3\1\u0101\7\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\5\3"+
    "\1\u0102\3\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\4\3\1\u0103"+
    "\4\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\47\76\1\u0104\34\76\4\0\1\77\47\76"+
    "\1\u0105\34\76\4\0\1\77\47\76\1\u0106\34\76\4\0"+
    "\1\77\31\76\1\u0107\52\76\4\0\1\77\47\76\1\u0108"+
    "\22\76\2\252\2\76\1\252\1\76\1\252\3\76\4\0"+
    "\1\77\104\76\4\0\1\77\14\76\1\u0109\54\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\3\3\1\u010a\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\1\3\1\u010b"+
    "\2\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\u010c\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\3\3\1\u010d\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\24\76\1\262"+
    "\1\263\2\76\1\262\1\76\1\262\1\76\1\264\1\103"+
    "\4\0\1\77\72\76\2\263\2\76\1\263\1\76\1\263"+
    "\1\76\1\264\1\103\4\0\1\77\72\76\2\u010e\2\76"+
    "\1\u010e\1\76\1\u010e\3\76\4\0\1\77\104\76\4\0"+
    "\1\77\25\76\1\u010f\43\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\4\3\1\u0110\4\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\u0111\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\5\3\1\u0112\3\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\35\76\1\u0113"+
    "\4\0\1\77\71\76\10\3\2\76\1\u0114\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\4\3\1\u0115\3\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\u0116\1\u0117\1\u0118\1\u0119"+
    "\1\u011a\10\3\2\76\1\3\2\76\1\3\1\76\1\3"+
    "\1\u011b\3\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\4\3\1\u011c\4\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\2\3\1\u011d\1\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\22\76\14\u011e\4\301\1\127\70\u011e\14\300\4\301\1\u011f"+
    "\70\300\20\301\1\u0120\70\301\14\u0121\4\301\1\135\6\u0121"+
    "\1\u0122\1\u0123\1\u0124\57\u0121\14\76\4\0\1\77\13\76"+
    "\1\u0125\55\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\2\3\1\u0126\1\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\3\3\1\u0127"+
    "\5\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\3\3\1\u0128\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\3\3"+
    "\1\u0129\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\24\76\1\u0125"+
    "\44\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\3\3\1\u0126"+
    "\5\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\22\76\1\u012a\46\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\1\3\1\u012b\7\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\6\3\1\u012c\2\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\3\3\1\u012d\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\4\3\1\u012e"+
    "\4\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\u012f\1\u0130\1\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\3\3\1\u0131\5\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\2\3\1\u0132"+
    "\1\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\35\76\1\u0133\4\0\1\77\71\76"+
    "\10\3\2\76\1\u0134\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\1\3\1\u0135"+
    "\2\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\u0136\1\u0137"+
    "\1\3\1\76\4\3\1\u0138\4\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\25\76\1\u0139"+
    "\43\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\4\3\1\u013a"+
    "\4\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\25\76\1\u013b\43\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\4\3\1\u013c\4\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\3\3\1\u013d\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\25\76\1\u013e\56\76\4\0"+
    "\1\77\25\76\1\u013f\43\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\4\3\1\u0140\4\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\4\3\1\u0141\4\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\3\3\1\u0142\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\2\3\1\u0143\1\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\35\76\1\u0144"+
    "\4\0\1\77\104\76\4\0\1\77\13\76\1\u0145\70\76"+
    "\4\0\1\77\25\76\1\u0146\55\76\1\u0147\4\0\1\77"+
    "\104\76\4\0\1\77\13\76\1\u0148\55\76\10\3\2\76"+
    "\1\u0149\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\2\3\1\u014a\1\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\4\3"+
    "\1\u014b\4\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\u014c\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\2\3"+
    "\1\u014d\1\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\2\3\1\u014e\6\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\2\3\1\u014f\6\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\35\76\1\u0150\4\0\1\77\71\76\10\3"+
    "\2\76\1\u0151\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\u0152\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\u0153\1\u0154\10\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\5\3\1\u0155\3\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\24\76\1\u0156\16\76\1\u0157\25\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\3\3\1\u0158\5\3\2\76\1\3\2\76"+
    "\1\3\1\76\2\3\1\u0159\2\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\4\3\1\u015a\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\2\3\1\u015b"+
    "\1\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\216\2\76\1\216\3\0"+
    "\1\220\1\77\2\76\1\216\6\76\1\216\1\u015c\2\216"+
    "\1\76\2\216\1\76\11\216\2\76\1\216\2\76\1\216"+
    "\1\76\5\216\36\76\4\0\1\77\13\76\1\u015d\55\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\2\3\1\u015e\1\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\6\3"+
    "\1\u015f\1\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\5\3\1\u0160\3\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\30\76"+
    "\1\u0161\53\76\4\0\1\77\13\76\1\u0162\55\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\2\3\1\u0163\1\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\4\3\1\u0164\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\3\3\1\u0165"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\u0166\1\u0167\4\3"+
    "\24\76\2\u010e\2\76\1\u010e\1\76\1\u010e\2\76\1\103"+
    "\4\0\1\77\71\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\3\3\1\u0168\5\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\5\76\1\u0169\12\76\2\u016a"+
    "\47\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\2\76\1\u0169\3\76\4\3\1\76\2\3\1\u016a"+
    "\1\u016b\10\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\5\3\1\u016c"+
    "\3\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\42\76\1\u016d\26\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\1\3\1\u016e\3\3\23\76\10\3\2\76\1\u016f\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\27\76\1\u0170\6\76\4\0\1\77\71\76\4\3\1\u0171"+
    "\3\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\7\3\1\u0172\1\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\u0173\1\76\5\3"+
    "\22\76\14\u011e\4\301\1\u0174\70\u011e\14\76\4\u0175\1\77"+
    "\1\130\2\u0176\1\76\2\u0176\62\76\14\0\4\u0175\2\0"+
    "\2\u0175\1\0\2\u0175\62\0\14\u0121\4\301\1\u0177\6\u0121"+
    "\1\u0122\1\u0123\1\u0124\73\u0121\4\301\1\u0177\6\u0121\1\u0124"+
    "\1\u0123\1\u0124\57\u0121\13\76\1\u012a\4\0\1\77\71\76"+
    "\10\3\2\76\1\u012b\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\1\3\1\u0178"+
    "\2\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\2\3\1\u0179\1\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\u017a\1\u017b\1\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\11\76\1\u017c\57\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\1\u017d"+
    "\3\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\u017e\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\u017f\1\u0180\10\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\7\3\1\u0181\1\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\15\76\2\u0182\52\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\u0182\1\u0183\1\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\u0184\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\3\3"+
    "\1\u0185\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\7\3\1\u0186\1\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\36\76\4\0\1\77\25\76\1\u0187\43\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\4\3\1\u0188\4\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\u0189\1\u018a\10\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\22\76"+
    "\1\u018b\46\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\1\3"+
    "\1\u018c\7\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\u018d\1\76\5\3\36\76\4\0\1\77"+
    "\20\76\2\u018e\62\76\4\0\1\77\12\76\1\u018f\56\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\u018e\1\u0190\10\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\1\3"+
    "\1\u0191\2\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\2\3\1\u0192\6\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\3\3\1\u0193\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\25\76\1\u0194\56\76\4\0"+
    "\1\77\23\76\1\u0195\57\76\1\u0196\4\0\1\77\14\76"+
    "\1\u0197\67\76\4\0\1\77\22\76\1\u0198\60\76\1\u0199"+
    "\4\0\1\77\71\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\4\3\1\u019a\4\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\2\3"+
    "\1\u019b\6\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\u019c\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\3\3\1\u019d\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\1\3\1\u019e\7\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\u019f\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\1\3\1\u01a0\7\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\u01a1\1\u01a2"+
    "\10\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\25\76\1\u01a3\43\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\4\3\1\u01a4\4\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\u01a5\1\u01a6"+
    "\1\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\25\76\1\u01a7\43\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\4\3\1\u01a8\4\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\1\3\1\u01a9\3\3\36\76\4\0\1\77\25\76"+
    "\1\u01aa\56\76\4\0\1\77\14\76\1\u01ab\54\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\4\3\1\u01ac\4\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\3\3"+
    "\1\u01ad\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\u01ae\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\u01af\1\u01b0\10\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\216"+
    "\2\76\1\216\3\0\1\220\1\77\2\76\1\216\6\76"+
    "\4\216\1\76\2\216\1\76\5\216\1\u01b1\3\216\2\76"+
    "\1\216\2\76\1\216\1\76\5\216\35\76\1\u01b2\4\0"+
    "\1\77\71\76\10\3\2\76\1\u01b3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\3\3\1\u01b4\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\31\76"+
    "\1\u01b5\37\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\u01b6\1\u01b7"+
    "\10\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\1\3\1\u01b8\2\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\1\3\1\u01b9\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\20\76"+
    "\2\u016a\53\76\1\u01ba\6\76\4\0\1\77\71\76\4\3"+
    "\1\u01bb\3\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\1\3\1\u01bc\7\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\20\76"+
    "\2\u01bd\47\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\u01bd\1\u01be"+
    "\10\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\1\3\1\u01bf\2\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\u01c0\1\u01c1\10\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\22\76\14\21\4\u0175\1\127"+
    "\1\277\67\21\14\134\4\u0175\1\135\1\303\2\u01c2\1\134"+
    "\2\u01c2\1\136\1\137\1\140\57\134\1\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\4\3\1\u01c3\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\4\3\1\u01c4\4\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\15\76\2\u012a"+
    "\52\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\u012a\1\u012b\1\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\36\76\4\0"+
    "\1\77\47\76\1\u01c5\21\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\1\76\1\u01c5\21\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\u01c6\1\u01c7\1\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\25\76\1\u012a\43\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\4\3\1\u012b\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\5\3\1\u01c8\3\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\6\3\1\u01c9\1\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\36\76\4\0\1\77\24\76\1\u01ca\44\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\3\3\1\u01cb\5\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\36\76\4\0"+
    "\1\77\14\76\1\u01cc\54\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\3\3\1\u01cd\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\12\76\1\u01ce\71\76\4\0"+
    "\1\77\30\76\1\u01cf\40\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\1\3\1\u01d0\2\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\7\3\1\u01d1\1\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\2\3\1\u01d2\1\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\1\3\1\u01d3"+
    "\7\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\17\76\1\u01d4\64\76\4\0\1\77\14\76"+
    "\1\u01d5\67\76\4\0\1\77\24\76\1\u01d6\50\76\1\u01d7"+
    "\6\76\4\0\1\77\104\76\4\0\1\77\27\76\1\u01d8"+
    "\41\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\1\3\1\u01d9\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\3\3\1\u01da\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\3\3\1\u01db\5\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\4\3\1\u01dc\3\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\6\3\1\u01dd\2\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\3\3"+
    "\1\u01de\5\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\22\76\1\u01df\46\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\1\3\1\u01e0\7\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\31\76"+
    "\1\u01e1\37\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\10\3"+
    "\1\u01e2\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\25\76\1\u01e3\43\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\4\3\1\u01e4\4\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\1\3\1\u01e5\2\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\36\76\4\0\1\77\12\76\1\u01e6\56\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\1\3\1\u01e7\2\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\216"+
    "\2\76\1\216\3\0\1\220\1\77\2\76\1\216\6\76"+
    "\4\216\1\76\2\216\1\76\1\216\1\u01e8\7\216\2\76"+
    "\1\216\2\76\1\216\1\76\5\216\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\2\3"+
    "\1\u01e9\1\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\26\76"+
    "\1\u01ea\42\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\5\3"+
    "\1\u01eb\3\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\7\3\1\u01ec"+
    "\1\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\u01ed\1\u01ee\1\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\u01ef\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\36\76\4\0\1\77\25\76\1\u01f0\43\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\4\3\1\u01f1\4\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\2\3\1\u01f2\1\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\13\76\1\u01f3\55\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\2\3\1\u01f4\1\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\u01f5\1\u01f6"+
    "\10\3\2\76\1\3\2\76\1\3\1\76\5\3\23\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\1\u01f7\3\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\31\76\1\u01f8\37\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\10\3\1\u01f9\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\1\3\1\u012b\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\2\3\1\u01fa\1\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\23\76\1\u01fb\45\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\2\3\1\u01fc\6\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\12\76\1\u01fd\56\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\1\3\1\u01fe\2\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\4\3\1\u01ff\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\u0200"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\35\76\1\u0201\4\0\1\77\104\76\4\0\1\77"+
    "\17\76\1\u0202\64\76\4\0\1\77\12\76\1\u0203\71\76"+
    "\4\0\1\77\14\76\1\u0204\66\76\1\u0205\4\0\1\77"+
    "\71\76\10\3\2\76\1\u0206\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\1\3\1\u0207\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\1\3\1\u0208\2\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\3\3\1\u0209\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\u020a\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\35\76\1\u020b\4\0"+
    "\1\77\71\76\10\3\2\76\1\u020c\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\36\76\4\0"+
    "\1\77\14\76\1\u020d\54\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\3\3\1\u020e\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\35\76\1\u020f\4\0\1\77\71\76\10\3\2\76"+
    "\1\u0210\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\4\3\1\u0211\4\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\216\2\76\1\216\3\0\1\220\1\77"+
    "\2\76\1\216\6\76\4\216\1\76\1\216\1\u0212\1\76"+
    "\11\216\2\76\1\216\2\76\1\216\1\76\5\216\36\76"+
    "\4\0\1\77\24\76\1\u0213\44\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\3\3\1\u0214\5\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\3\3\1\u0215\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\36\76\4\0\1\77\12\76\1\u0216\56\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\1\3\1\u0217\2\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\3\3"+
    "\1\u0218\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\35\76\1\u0219\4\0\1\77\71\76"+
    "\10\3\2\76\1\u021a\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\26\76"+
    "\1\u021b\42\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\5\3"+
    "\1\u021c\3\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\1\3\1\u021d\2\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\14\76\1\u021e\54\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\3\3\1\u021f"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\u0220\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\35\76"+
    "\1\u0221\4\0\1\77\71\76\10\3\2\76\1\u0222\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\25\76\1\u0223\43\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\4\3\1\u0224\4\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\11\76"+
    "\1\u0225\72\76\4\0\1\77\26\76\1\u0226\54\76\1\u0227"+
    "\4\0\1\77\104\76\4\0\1\77\12\76\1\u0228\71\76"+
    "\4\0\1\77\24\76\1\u0229\44\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\1\u022a\3\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\5\3\1\u022b\3\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\u022c\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\11\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\1\3\1\u022d\2\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\3\3\1\u022e\5\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\11\76"+
    "\1\u022f\57\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\1\u0230\3\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\12\76\1\u0231\56\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\1\3\1\u0232"+
    "\2\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\u0233\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\216\2\76\1\216\3\0\1\220\1\77\2\76"+
    "\1\216\6\76\4\216\1\u0234\1\u0235\1\216\1\76\11\216"+
    "\2\76\1\216\2\76\1\216\1\76\5\216\23\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\1\3\1\u0236\2\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\36\76\4\0\1\77"+
    "\30\76\1\u0237\40\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\7\3\1\u0238\1\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\1\3"+
    "\1\u0239\7\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\24\76\1\u012a\44\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\3\3\1\u012b\5\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\5\3\1\u023a\3\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\12\76\1\u0125"+
    "\56\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\1\3\1\u0126\2\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\26\76\1\u023b\46\76\1\u023c\6\76\4\0"+
    "\1\77\104\76\4\0\1\77\26\76\1\u023d\54\76\1\u023e"+
    "\4\0\1\77\104\76\4\0\1\77\25\76\1\u023f\43\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\5\3\1\u0240\3\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\23\76\4\3"+
    "\1\u0241\3\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\5\3\1\u0242\3\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\u0243"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\11\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\23\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\4\3\1\76\2\3\1\76\4\3"+
    "\1\u0244\4\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\26\76\1\u0245\42\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\5\3\1\u0246\3\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\35\76\1\u0247\4\0\1\77"+
    "\71\76\10\3\2\76\1\u0248\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\11\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\1\3\1\u0249\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\35\76\1\u024a\4\0\1\77\71\76"+
    "\10\216\2\76\1\u024b\3\0\1\220\1\77\2\76\1\216"+
    "\6\76\4\216\1\76\2\216\1\76\11\216\2\76\1\216"+
    "\2\76\1\216\1\76\5\216\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\76"+
    "\2\3\1\76\7\3\1\u024c\1\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\23\76\10\3\2\76\1\u024d\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\23\76\10\3\2\76\1\3\3\0\1\16\1\77\2\76"+
    "\1\3\6\76\4\3\1\76\2\3\1\76\6\3\1\u024e"+
    "\2\3\2\76\1\3\2\76\1\3\1\76\5\3\36\76"+
    "\4\0\1\77\24\76\1\u024f\50\76\1\u0250\6\76\4\0"+
    "\1\77\104\76\4\0\1\77\15\76\2\u0251\52\76\10\3"+
    "\2\76\1\3\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\3\3\1\u0252\5\3\2\76"+
    "\1\3\2\76\1\3\1\76\5\3\23\76\4\3\1\u0253"+
    "\3\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\23\76\10\3\2\76\1\3"+
    "\3\0\1\16\1\77\2\76\1\3\6\76\4\3\1\u0251"+
    "\1\u0254\1\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\36\76\4\0\1\77\24\76\1\u0255\44\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\3\3\1\u0256\5\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\36\76\4\0"+
    "\1\77\25\76\1\u0257\43\76\10\216\2\76\1\216\3\0"+
    "\1\220\1\77\2\76\1\216\6\76\4\216\1\76\2\216"+
    "\1\76\4\216\1\u0258\4\216\2\76\1\216\2\76\1\216"+
    "\1\76\5\216\23\76\10\3\2\76\1\3\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\10\3\1\u0259\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\12\76\1\u025a\56\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\1\3"+
    "\1\u025b\2\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\36\76\4\0\1\77\12\76"+
    "\1\u025c\56\76\10\3\2\76\1\3\3\0\1\16\1\77"+
    "\2\76\1\3\6\76\1\3\1\u025d\2\3\1\76\2\3"+
    "\1\76\11\3\2\76\1\3\2\76\1\3\1\76\5\3"+
    "\36\76\4\0\1\77\33\76\1\u025e\35\76\10\216\2\76"+
    "\1\216\3\0\1\220\1\77\2\76\1\216\6\76\4\216"+
    "\1\76\2\216\1\76\11\216\1\76\1\u025e\1\216\2\76"+
    "\1\216\1\76\5\216\23\76\10\3\2\76\1\3\3\0"+
    "\1\16\1\77\2\76\1\3\6\76\4\3\1\76\2\3"+
    "\1\u025f\1\u0260\10\3\2\76\1\3\2\76\1\3\1\76"+
    "\5\3\35\76\1\u0261\4\0\1\77\71\76\10\3\2\76"+
    "\1\u0262\3\0\1\16\1\77\2\76\1\3\6\76\4\3"+
    "\1\76\2\3\1\76\11\3\2\76\1\3\2\76\1\3"+
    "\1\76\5\3\35\76\1\u0263\4\0\1\77\71\76\10\3"+
    "\2\76\1\u0264\3\0\1\16\1\77\2\76\1\3\6\76"+
    "\4\3\1\76\2\3\1\76\11\3\2\76\1\3\2\76"+
    "\1\3\1\76\5\3\36\76\4\0\1\77\10\76\1\u0265"+
    "\73\76\4\0\1\77\13\76\1\u0266\55\76\10\3\2\76"+
    "\1\3\3\0\1\16\1\77\2\76\1\3\6\76\2\3"+
    "\1\u0267\1\3\1\76\2\3\1\76\11\3\2\76\1\3"+
    "\2\76\1\3\1\76\5\3\24\76\7\u0268\2\76\1\u0268"+
    "\4\0\1\77\11\76\4\u0268\1\76\2\u0268\1\76\11\u0268"+
    "\2\76\1\u0268\2\76\1\u0268\1\76\5\u0268\35\76\1\u0269"+
    "\4\0\1\77\71\76\10\3\2\76\1\u026a\3\0\1\16"+
    "\1\77\2\76\1\3\6\76\4\3\1\76\2\3\1\76"+
    "\11\3\2\76\1\3\2\76\1\3\1\76\5\3\24\76"+
    "\7\u0268\2\76\1\u0268\4\0\1\77\10\76\1\u026b\4\u0268"+
    "\1\76\2\u0268\1\76\11\u0268\2\76\1\u0268\2\76\1\u0268"+
    "\1\76\5\u0268\36\76\4\0\1\77\22\76\1\u026c\46\76"+
    "\10\3\2\76\1\3\3\0\1\16\1\77\2\76\1\3"+
    "\6\76\4\3\1\76\2\3\1\76\1\3\1\u026d\7\3"+
    "\2\76\1\3\2\76\1\3\1\76\5\3\36\76\4\0"+
    "\1\77\35\76\1\u026e\32\76";

  private static int [] zzUnpackTrans() {
    int [] result = new int[34602];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\12\1\1\11\61\1\4\0\1\1\1\0\1\1"+
    "\1\0\7\1\1\0\1\1\1\0\10\1\1\0\3\1"+
    "\2\0\1\1\1\0\14\1\1\0\6\1\2\0\3\1"+
    "\1\0\3\1\3\0\5\1\1\0\32\1\1\0\13\1"+
    "\1\0\1\1\1\0\5\1\4\0\3\1\1\0\5\1"+
    "\2\0\1\1\2\0\4\1\1\0\1\1\1\0\7\1"+
    "\1\0\3\1\1\0\1\1\1\0\3\1\2\0\6\1"+
    "\5\0\11\1\1\0\6\1\1\0\4\1\1\0\7\1"+
    "\1\0\1\1\1\0\4\1\1\0\7\1\1\0\2\1"+
    "\1\0\5\1\3\0\1\1\1\0\1\1\1\0\4\1"+
    "\1\0\4\1\1\0\6\1\1\0\4\1\1\0\2\1"+
    "\2\0\4\1\5\0\7\1\1\0\2\1\1\0\2\1"+
    "\2\0\5\1\1\0\3\1\1\0\7\1\2\0\2\1"+
    "\1\0\7\1\1\11\1\1\1\0\2\1\1\0\1\1"+
    "\1\0\2\1\1\0\11\1\1\0\1\1\1\0\2\1"+
    "\2\0\5\1\5\0\7\1\1\0\3\1\1\0\5\1"+
    "\1\0\3\1\1\0\6\1\1\0\6\1\1\0\2\1"+
    "\1\0\5\1\1\0\3\1\1\0\1\1\1\0\7\1"+
    "\5\0\6\1\1\0\1\1\1\0\1\1\1\0\6\1"+
    "\1\0\5\1\1\0\2\1\1\0\1\1\1\0\2\1"+
    "\1\0\2\1\1\0\1\1\1\0\4\1\4\0\7\1"+
    "\1\0\10\1\1\0\4\1\1\0\2\1\1\0\6\1"+
    "\5\0\5\1\1\0\1\1\1\0\2\1\1\0\6\1"+
    "\1\0\1\1\1\0\1\1\1\0\5\1\1\0\4\1"+
    "\1\0\4\1\1\0\5\1\1\0\1\1\1\0\2\1"+
    "\1\0\1\1\1\0\1\1\2\0\5\1\2\0\1\1"+
    "\2\0\1\1\1\0\3\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[622];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String token; 
    public int lineNumber; 


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  PHPLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 274) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { token = yytext(); lineNumber = yyline; return ERROR;
            }
          case 131: break;
          case 2: 
            { token = yytext(); lineNumber = yyline; return ID;
            }
          case 132: break;
          case 3: 
            { token = yytext(); lineNumber = yyline; return NUMBER;
            }
          case 133: break;
          case 4: 
            { token = yytext(); lineNumber = yyline; return MINUS;
            }
          case 134: break;
          case 5: 
            { token = yytext(); lineNumber = yyline; return DOT;
            }
          case 135: break;
          case 6: 
            { /*Nothing jaja*/
            }
          case 136: break;
          case 7: 
            { token = yytext(); lineNumber = yyline; return DIV;
            }
          case 137: break;
          case 8: 
            { token = yytext(); lineNumber = yyline; return MULT;
            }
          case 138: break;
          case 9: 
            { token = yytext(); lineNumber = yyline; return COMMENT;
            }
          case 139: break;
          case 10: 
            { token = yytext(); lineNumber = yyline; return QUOTATION;
            }
          case 140: break;
          case 11: 
            { token = yytext(); lineNumber = yyline; return ESC;
            }
          case 141: break;
          case 12: 
            { token = yytext(); lineNumber = yyline; return RECT_OPEN_BRACE;
            }
          case 142: break;
          case 13: 
            { token = yytext(); lineNumber = yyline; return RECT_CLOSE_BRACE;
            }
          case 143: break;
          case 14: 
            { token = yytext(); lineNumber = yyline; return QUESTION;
            }
          case 144: break;
          case 15: 
            { token = yytext(); lineNumber = yyline; return COLON;
            }
          case 145: break;
          case 16: 
            { token = yytext(); lineNumber = yyline; return ASSING;
            }
          case 146: break;
          case 17: 
            { token = yytext(); lineNumber = yyline; return GREATER;
            }
          case 147: break;
          case 18: 
            { token = yytext(); lineNumber = yyline; return PLUS;
            }
          case 148: break;
          case 19: 
            { token = yytext(); lineNumber = yyline; return NOT;
            }
          case 149: break;
          case 20: 
            { token = yytext(); lineNumber = yyline; return LESS;
            }
          case 150: break;
          case 21: 
            { token = yytext(); lineNumber = yyline; return MOD;
            }
          case 151: break;
          case 22: 
            { token = yytext(); lineNumber = yyline; return BIT_AND;
            }
          case 152: break;
          case 23: 
            { token = yytext(); lineNumber = yyline; return BIT_OR;
            }
          case 153: break;
          case 24: 
            { token = yytext(); lineNumber = yyline; return BIT_XOR;
            }
          case 154: break;
          case 25: 
            { token = yytext(); lineNumber = yyline; return SEMICOLON;
            }
          case 155: break;
          case 26: 
            { token = yytext(); lineNumber = yyline; return COMMA;
            }
          case 156: break;
          case 27: 
            { token = yytext(); lineNumber = yyline; return OPEN_BRACE;
            }
          case 157: break;
          case 28: 
            { token = yytext(); lineNumber = yyline; return CLOSE_BRACE;
            }
          case 158: break;
          case 29: 
            { token = yytext(); lineNumber = yyline; return OPEN_CURLY_BRACE;
            }
          case 159: break;
          case 30: 
            { token = yytext(); lineNumber = yyline; return CLOSE_CURLY_BRACE;
            }
          case 160: break;
          case 31: 
            { token = yytext(); lineNumber = yyline; return BIT_NOT;
            }
          case 161: break;
          case 32: 
            { token = yytext(); lineNumber = yyline; return AT;
            }
          case 162: break;
          case 33: 
            { token = yytext(); lineNumber = yyline; return REAL_NUM;
            }
          case 163: break;
          case 34: 
            { token = yytext(); lineNumber = yyline; return DECR;
            }
          case 164: break;
          case 35: 
            { token = yytext(); lineNumber = yyline; return MINUS_EQUAL;
            }
          case 165: break;
          case 36: 
            { token = yytext(); lineNumber = yyline; return CONCAT_EQUAL;
            }
          case 166: break;
          case 37: 
            { token = yytext(); lineNumber = yyline; return DIV_EQUAL;
            }
          case 167: break;
          case 38: 
            { token = yytext(); lineNumber = yyline; return POW;
            }
          case 168: break;
          case 39: 
            { token = yytext(); lineNumber = yyline; return MULT_EQUAL;
            }
          case 169: break;
          case 40: 
            { token = yytext(); lineNumber = yyline; return STRING;
            }
          case 170: break;
          case 41: 
            { token = yytext(); lineNumber = yyline; return AS;
            }
          case 171: break;
          case 42: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return DO;
            }
          case 172: break;
          case 43: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return IF;
            }
          case 173: break;
          case 44: 
            { token = yytext(); lineNumber = yyline; return OR;
            }
          case 174: break;
          case 45: 
            { token = yytext(); lineNumber = yyline; return VAR;
            }
          case 175: break;
          case 46: 
            { token = yytext(); lineNumber = yyline; return CLOSE;
            }
          case 176: break;
          case 47: 
            { token = yytext(); lineNumber = yyline; return DOUBLE_COLON;
            }
          case 177: break;
          case 48: 
            { token = yytext(); lineNumber = yyline; return EQUAL;
            }
          case 178: break;
          case 49: 
            { token = yytext(); lineNumber = yyline; return ARROW;
            }
          case 179: break;
          case 50: 
            { token = yytext(); lineNumber = yyline; return GREATER_EQUAL;
            }
          case 180: break;
          case 51: 
            { token = yytext(); lineNumber = yyline; return SR;
            }
          case 181: break;
          case 52: 
            { token = yytext(); lineNumber = yyline; return PLUSS_EQUAL;
            }
          case 182: break;
          case 53: 
            { token = yytext(); lineNumber = yyline; return INCR;
            }
          case 183: break;
          case 54: 
            { token = yytext(); lineNumber = yyline; return NOT_EQUAL;
            }
          case 184: break;
          case 55: 
            { token = yytext(); lineNumber = yyline; return LESS_EQUAL;
            }
          case 185: break;
          case 56: 
            { token = yytext(); lineNumber = yyline; return SL;
            }
          case 186: break;
          case 57: 
            { token = yytext(); lineNumber = yyline; return MOD_EQUAL;
            }
          case 187: break;
          case 58: 
            { token = yytext(); lineNumber = yyline; return AND_EQUAL;
            }
          case 188: break;
          case 59: 
            { token = yytext(); lineNumber = yyline; return SYM_AND;
            }
          case 189: break;
          case 60: 
            { token = yytext(); lineNumber = yyline; return OR_EQUAL;
            }
          case 190: break;
          case 61: 
            { token = yytext(); lineNumber = yyline; return SYM_OR;
            }
          case 191: break;
          case 62: 
            { token = yytext(); lineNumber = yyline; return XOR_EQUAL;
            }
          case 192: break;
          case 63: 
            { token = yytext(); lineNumber = yyline; return XOR;
            }
          case 193: break;
          case 64: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return FOR;
            }
          case 194: break;
          case 65: 
            { token = yytext(); lineNumber = yyline; return POW_EQUAL;
            }
          case 195: break;
          case 66: 
            { token = yytext(); lineNumber = yyline; return AND;
            }
          case 196: break;
          case 67: 
            { token = yytext(); lineNumber = yyline; return DIE;
            }
          case 197: break;
          case 68: 
            { token = yytext(); lineNumber = yyline; return USE;
            }
          case 198: break;
          case 69: 
            { token = yytext(); lineNumber = yyline; return NEW;
            }
          case 199: break;
          case 70: 
            { token = yytext(); lineNumber = yyline; return TRY;
            }
          case 200: break;
          case 71: 
            { token = yytext(); lineNumber = yyline; return IDENTICAL;
            }
          case 201: break;
          case 72: 
            { token = yytext(); lineNumber = yyline; return SR_EQUAL;
            }
          case 202: break;
          case 73: 
            { token = yytext(); lineNumber = yyline; return NOT_IDENTICAL;
            }
          case 203: break;
          case 74: 
            { token = yytext(); lineNumber = yyline; return SL_EQUAL;
            }
          case 204: break;
          case 75: 
            { token = yytext(); lineNumber = yyline; return EXIT;
            }
          case 205: break;
          case 76: 
            { token = yytext(); lineNumber = yyline; return ECHO;
            }
          case 206: break;
          case 77: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return ELSE;
            }
          case 207: break;
          case 78: 
            { token = yytext(); lineNumber = yyline; return EVAL;
            }
          case 208: break;
          case 79: 
            { token = yytext(); lineNumber = yyline; return CASE;
            }
          case 209: break;
          case 80: 
            { token = yytext(); lineNumber = yyline; return LIST;
            }
          case 210: break;
          case 81: 
            { token = yytext(); lineNumber = yyline; return GOTO;
            }
          case 211: break;
          case 82: 
            { token = yytext(); lineNumber = yyline; return FINAL;
            }
          case 212: break;
          case 83: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return BREAK;
            }
          case 213: break;
          case 84: 
            { token = yytext(); lineNumber = yyline; return ENDIF;
            }
          case 214: break;
          case 85: 
            { token = yytext(); lineNumber = yyline; return EMPTY;
            }
          case 215: break;
          case 86: 
            { token = yytext(); lineNumber = yyline; return CLASS;
            }
          case 216: break;
          case 87: 
            { token = yytext(); lineNumber = yyline; return CLONE;
            }
          case 217: break;
          case 88: 
            { token = yytext(); lineNumber = yyline; return CATCH;
            }
          case 218: break;
          case 89: 
            { token = yytext(); lineNumber = yyline; return CONST;
            }
          case 219: break;
          case 90: 
            { token = yytext(); lineNumber = yyline; return ARRAY;
            }
          case 220: break;
          case 91: 
            { token = yytext(); lineNumber = yyline; return ISSET;
            }
          case 221: break;
          case 92: 
            { token = yytext(); lineNumber = yyline; return UNSET;
            }
          case 222: break;
          case 93: 
            { token = yytext(); lineNumber = yyline; return TRAIT;
            }
          case 223: break;
          case 94: 
            { token = yytext(); lineNumber = yyline; return THROW;
            }
          case 224: break;
          case 95: 
            { token = yytext(); lineNumber = yyline; return PRINT;
            }
          case 225: break;
          case 96: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return WHILE;
            }
          case 226: break;
          case 97: 
            { token = yytext(); lineNumber = yyline; return INI;
            }
          case 227: break;
          case 98: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return ELSEIF;
            }
          case 228: break;
          case 99: 
            { token = yytext(); lineNumber = yyline; return ENDFOR;
            }
          case 229: break;
          case 100: 
            { token = yytext(); lineNumber = yyline; return C_CONSTANT;
            }
          case 230: break;
          case 101: 
            { token = yytext(); lineNumber = yyline; return STATIC;
            }
          case 231: break;
          case 102: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return SWITCH;
            }
          case 232: break;
          case 103: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return RETURN;
            }
          case 233: break;
          case 104: 
            { token = yytext(); lineNumber = yyline; return PUBLIC;
            }
          case 234: break;
          case 105: 
            { token = yytext(); lineNumber = yyline; return GLOBAL;
            }
          case 235: break;
          case 106: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return FOREACH;
            }
          case 236: break;
          case 107: 
            { token = yytext(); lineNumber = yyline; return EXTENDS;
            }
          case 237: break;
          case 108: 
            { token = yytext(); lineNumber = yyline; return DEFAULT;
            }
          case 238: break;
          case 109: 
            { token = yytext(); lineNumber = yyline; return DECLARE;
            }
          case 239: break;
          case 110: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return INCLUDE;
            }
          case 240: break;
          case 111: 
            { token = yytext(); lineNumber = yyline; return REQUIRE;
            }
          case 241: break;
          case 112: 
            { token = yytext(); lineNumber = yyline; return PRIVATE;
            }
          case 242: break;
          case 113: 
            { token = yytext(); lineNumber = yyline; return FUNCTION;
            }
          case 243: break;
          case 114: 
            { token = yytext(); lineNumber = yyline; return ENDWHILE;
            }
          case 244: break;
          case 115: 
            { token = yytext(); lineNumber = yyline; return CALLABLE;
            }
          case 245: break;
          case 116: 
            { token = yytext().toLowerCase(); lineNumber = yyline; return CONTINUE;
            }
          case 246: break;
          case 117: 
            { token = yytext(); lineNumber = yyline; return ABSTRACT;
            }
          case 247: break;
          case 118: 
            { token = yytext(); lineNumber = yyline; return ENDSWITCH;
            }
          case 248: break;
          case 119: 
            { token = yytext(); lineNumber = yyline; return INSTEADOF;
            }
          case 249: break;
          case 120: 
            { token = yytext(); lineNumber = yyline; return INTERFACE;
            }
          case 250: break;
          case 121: 
            { token = yytext(); lineNumber = yyline; return NAMESPACE;
            }
          case 251: break;
          case 122: 
            { token = yytext(); lineNumber = yyline; return PROTECTED;
            }
          case 252: break;
          case 123: 
            { token = yytext(); lineNumber = yyline; return ENDFOREACH;
            }
          case 253: break;
          case 124: 
            { token = yytext(); lineNumber = yyline; return ENDDECLARE;
            }
          case 254: break;
          case 125: 
            { token = yytext(); lineNumber = yyline; return INSTANCEOF;
            }
          case 255: break;
          case 126: 
            { token = yytext(); lineNumber = yyline; return IMPLEMENTS;
            }
          case 256: break;
          case 127: 
            { token = yytext(); lineNumber = yyline; return INCLUDE_ONCE;
            }
          case 257: break;
          case 128: 
            { token = yytext(); lineNumber = yyline; return REQUIRE_ONCE;
            }
          case 258: break;
          case 129: 
            { token = yytext(); lineNumber = yyline; return HALT_COMPILER;
            }
          case 259: break;
          case 130: 
            { token = yytext(); lineNumber = yyline; return DB;
            }
          case 260: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
